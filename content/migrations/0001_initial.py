# Generated by Django 4.2 on 2023-04-12 10:34

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Button',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Buttons',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_links', models.CharField(blank=True, help_text='A link that will take to a single the store', max_length=500, null=True)),
                ('name_of_product', models.CharField(max_length=100)),
                ('shopify_price', models.DecimalField(decimal_places=2, help_text='Product price from shopify', max_digits=10)),
                ('product_thumbnail', models.ImageField(default='products/defaut_image_store_light_blue_bag.jpg', upload_to='thumbnails/')),
                ('store_logo', models.ImageField(blank=True, default='products/defaut_image_store.png', upload_to='image_store/')),
                ('aliexpress_order', models.IntegerField(default=0, help_text='Amount of aliexpress order generated')),
                ('aliexpress_price', models.DecimalField(decimal_places=2, help_text='Product price from aliexpress', max_digits=10)),
                ('likes', models.IntegerField(default=0, help_text='Amount of likes generated')),
                ('comment', models.IntegerField(default=0, help_text='Amount of comment generated')),
                ('views', models.IntegerField(default=0, help_text='Amount of views generated')),
                ('links_to_ads', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='A link that will take to ads', null=True)),
                ('text_that_comes_with_ads', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('number_of_store_selling', models.IntegerField(default=0, help_text='Amount of store selling the product')),
                ('number_of_suppliers_selling', models.IntegerField(default=0, help_text='Amount of suppliers selling the product')),
                ('ads_run_since', models.DateTimeField()),
                ('links_to_others_stores', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='A link that will take to the store', null=True)),
                ('links_to_others_suppliers', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('is_faceBook', models.BooleanField(default=False)),
                ('is_pinterest', models.BooleanField(default=False)),
                ('is_tiktok', models.BooleanField(default=False)),
                ('has_video', models.BooleanField(default=False)),
                ('has_photo', models.BooleanField(default=False)),
                ('slug', models.SlugField(unique=True)),
                ('price_margin', models.DecimalField(decimal_places=2, help_text='Profit you get from this product', max_digits=10)),
                ('date_we_found', models.DateTimeField(auto_now_add=True)),
                ('aliexpress_total_sale', models.DecimalField(decimal_places=2, help_text='Amount of aliexpress sale generated', max_digits=10)),
                ('buttons', models.ManyToManyField(to='content.button')),
                ('categories', models.ManyToManyField(to='content.category')),
                ('countries', models.ManyToManyField(max_length=100, to='content.country')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Languages',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('ordered_date', models.DateTimeField(blank=True, null=True)),
                ('ordered', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Price',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Technologies',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vimeo_id', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(unique=True)),
                ('call_to_action', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('order', models.IntegerField(default=1)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='content.course')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('stripe_subscription_id', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=100)),
                ('pricing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='content.pricing')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_number_of_sale', models.IntegerField(blank=True, null=True)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.course')),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.course')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='content.order')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='languages',
            field=models.ManyToManyField(to='content.language'),
        ),
        migrations.AddField(
            model_name='course',
            name='name_of_store',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='store_name', to='content.store'),
        ),
        migrations.AddField(
            model_name='course',
            name='technologies',
            field=models.ManyToManyField(to='content.technology'),
        ),
    ]
