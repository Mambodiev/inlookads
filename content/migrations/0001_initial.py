# Generated by Django 4.2 on 2023-04-28 20:19

import ckeditor_uploader.fields
import content.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import parler.fields
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Button',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', content.models.AutoDateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Buttons',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', content.models.AutoDateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', content.models.AutoDateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shopify_links', models.CharField(blank=True, help_text='A link that will take to a single the store', max_length=500, null=True)),
                ('shopify_price', models.DecimalField(decimal_places=2, help_text='Product price from shopify', max_digits=10, verbose_name='shopify_price')),
                ('product_thumbnail', models.ImageField(default='products/defaut_image_store_light_blue_bag.jpg', upload_to='thumbnails/', verbose_name='product_thumbnail')),
                ('store_logo', models.ImageField(blank=True, default='products/defaut_image_store.png', upload_to='image_store/', verbose_name='store_logo')),
                ('aliexpress_order', models.IntegerField(default=0, help_text='Amount of aliexpress order generated', verbose_name='aliexpress_order')),
                ('aliexpress_price', models.DecimalField(decimal_places=2, help_text='Product price from aliexpress', max_digits=10, verbose_name='aliexpress_price')),
                ('likes', models.IntegerField(default=0, help_text='Amount of likes generated', verbose_name='likes')),
                ('comment', models.IntegerField(default=0, help_text='Amount of comment generated', verbose_name='comment')),
                ('views', models.IntegerField(default=0, help_text='Amount of views generated', verbose_name='views')),
                ('links_to_ads', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='A link that will take to ads', null=True, verbose_name='links_to_ads')),
                ('text_that_comes_with_ads', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='text_that_comes_with_ads')),
                ('number_of_store_selling', models.IntegerField(default=0, help_text='Amount of store selling the product', verbose_name='number_of_store_selling')),
                ('number_of_suppliers_selling', models.IntegerField(default=0, help_text='Amount of suppliers selling the product', verbose_name='number_of_suppliers_selling')),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('links_to_others_stores', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='A link that will take to the store', null=True, verbose_name='links_to_others_stores')),
                ('links_to_others_suppliers', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='links_to_others_suppliers')),
                ('is_faceBook', models.BooleanField(default=False, verbose_name='is_faceBook')),
                ('is_pinterest', models.BooleanField(default=False, verbose_name='is_pinterest')),
                ('is_tiktok', models.BooleanField(default=False, verbose_name='is_tiktok')),
                ('has_video', models.BooleanField(default=False, verbose_name='has_video')),
                ('has_photo', models.BooleanField(default=False, verbose_name='has_photo')),
                ('price_margin', models.DecimalField(blank=True, decimal_places=2, help_text='Profit you get from this product', max_digits=10, verbose_name='price_margin')),
                ('updated_at', content.models.AutoDateTimeField(default=django.utils.timezone.now)),
                ('aliexpress_total_sale', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of aliexpress sale generated', max_digits=10)),
                ('buttons', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='store_name', to='content.button')),
                ('categories', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.category')),
                ('countries', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='content.country')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', content.models.AutoDateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Languages',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', content.models.AutoDateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Prices',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', content.models.AutoDateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('updated_at', content.models.AutoDateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', content.models.AutoDateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', content.models.AutoDateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Technologies',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vimeo_id', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(unique=True)),
                ('call_to_action', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('order', models.IntegerField(default=1)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('updated_at', content.models.AutoDateTimeField(default=django.utils.timezone.now)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='content.course')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateField(default=django.utils.timezone.now)),
                ('updated_at', content.models.AutoDateTimeField(default=django.utils.timezone.now)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.course')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='content.order')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='languages',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='store_name', to='content.language'),
        ),
        migrations.AddField(
            model_name='course',
            name='name_of_store',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='store_name', to='content.store'),
        ),
        migrations.AddField(
            model_name='course',
            name='technologies',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='store_name', to='content.technology'),
        ),
        migrations.CreateModel(
            name='TechnologyTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='content.technology')),
            ],
            options={
                'verbose_name': 'technology Translation',
                'db_table': 'content_technology_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PricingTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='content.pricing')),
            ],
            options={
                'verbose_name': 'pricing Translation',
                'db_table': 'content_pricing_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LanguageTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='content.language')),
            ],
            options={
                'verbose_name': 'language Translation',
                'db_table': 'content_language_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CourseTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name_of_product', models.CharField(max_length=100, verbose_name='name_of_product')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='content.course')),
            ],
            options={
                'verbose_name': 'course Translation',
                'db_table': 'content_course_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CountryTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='content.country')),
            ],
            options={
                'verbose_name': 'country Translation',
                'db_table': 'content_country_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CategoryTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='content.category')),
            ],
            options={
                'verbose_name': 'category Translation',
                'db_table': 'content_category_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ButtonTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='content.button')),
            ],
            options={
                'verbose_name': 'button Translation',
                'db_table': 'content_button_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
